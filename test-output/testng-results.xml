<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1639" started-at="2021-04-30T18:52:05 IST" finished-at="2021-04-30T18:52:06 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1639" started-at="2021-04-30T18:52:05 IST" finished-at="2021-04-30T18:52:06 IST">
      <class name="executionOrder.AnnotationTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="beforeClass" is-config="true" duration-ms="1150" started-at="2021-04-30T18:52:05 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="first()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="first" duration-ms="12" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- first -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="third()[pri:2, instance:executionOrder.AnnotationTest@887af79]" name="third" duration-ms="2" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- third -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="second()[pri:3, instance:executionOrder.AnnotationTest@887af79]" name="second" duration-ms="2" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- second -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="afterTest" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:06 IST" finished-at="2021-04-30T18:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:executionOrder.AnnotationTest@887af79]" name="afterSuite" is-config="true" duration-ms="0" started-at="2021-04-30T18:52:13 IST" finished-at="2021-04-30T18:52:13 IST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skip Delibratly, as this test is incomplete]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skip Delibratly, as this test is incomplete
at executionOrder.AnnotationTest.afterSuite(AnnotationTest.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:351)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- executionOrder.AnnotationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
